package com.neuedu.entity;

import java.util.ArrayList;
import java.util.List;

public class ConstantsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public ConstantsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andConsIdIsNull() {
            addCriterion("cons_id is null");
            return (Criteria) this;
        }

        public Criteria andConsIdIsNotNull() {
            addCriterion("cons_id is not null");
            return (Criteria) this;
        }

        public Criteria andConsIdEqualTo(Integer value) {
            addCriterion("cons_id =", value, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdNotEqualTo(Integer value) {
            addCriterion("cons_id <>", value, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdGreaterThan(Integer value) {
            addCriterion("cons_id >", value, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("cons_id >=", value, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdLessThan(Integer value) {
            addCriterion("cons_id <", value, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdLessThanOrEqualTo(Integer value) {
            addCriterion("cons_id <=", value, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdIn(List<Integer> values) {
            addCriterion("cons_id in", values, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdNotIn(List<Integer> values) {
            addCriterion("cons_id not in", values, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdBetween(Integer value1, Integer value2) {
            addCriterion("cons_id between", value1, value2, "consId");
            return (Criteria) this;
        }

        public Criteria andConsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("cons_id not between", value1, value2, "consId");
            return (Criteria) this;
        }

        public Criteria andConsTypeIsNull() {
            addCriterion("cons_type is null");
            return (Criteria) this;
        }

        public Criteria andConsTypeIsNotNull() {
            addCriterion("cons_type is not null");
            return (Criteria) this;
        }

        public Criteria andConsTypeEqualTo(String value) {
            addCriterion("cons_type =", value, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeNotEqualTo(String value) {
            addCriterion("cons_type <>", value, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeGreaterThan(String value) {
            addCriterion("cons_type >", value, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeGreaterThanOrEqualTo(String value) {
            addCriterion("cons_type >=", value, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeLessThan(String value) {
            addCriterion("cons_type <", value, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeLessThanOrEqualTo(String value) {
            addCriterion("cons_type <=", value, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeLike(String value) {
            addCriterion("cons_type like", value, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeNotLike(String value) {
            addCriterion("cons_type not like", value, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeIn(List<String> values) {
            addCriterion("cons_type in", values, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeNotIn(List<String> values) {
            addCriterion("cons_type not in", values, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeBetween(String value1, String value2) {
            addCriterion("cons_type between", value1, value2, "consType");
            return (Criteria) this;
        }

        public Criteria andConsTypeNotBetween(String value1, String value2) {
            addCriterion("cons_type not between", value1, value2, "consType");
            return (Criteria) this;
        }

        public Criteria andConsCodeIsNull() {
            addCriterion("cons_code is null");
            return (Criteria) this;
        }

        public Criteria andConsCodeIsNotNull() {
            addCriterion("cons_code is not null");
            return (Criteria) this;
        }

        public Criteria andConsCodeEqualTo(String value) {
            addCriterion("cons_code =", value, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeNotEqualTo(String value) {
            addCriterion("cons_code <>", value, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeGreaterThan(String value) {
            addCriterion("cons_code >", value, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeGreaterThanOrEqualTo(String value) {
            addCriterion("cons_code >=", value, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeLessThan(String value) {
            addCriterion("cons_code <", value, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeLessThanOrEqualTo(String value) {
            addCriterion("cons_code <=", value, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeLike(String value) {
            addCriterion("cons_code like", value, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeNotLike(String value) {
            addCriterion("cons_code not like", value, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeIn(List<String> values) {
            addCriterion("cons_code in", values, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeNotIn(List<String> values) {
            addCriterion("cons_code not in", values, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeBetween(String value1, String value2) {
            addCriterion("cons_code between", value1, value2, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsCodeNotBetween(String value1, String value2) {
            addCriterion("cons_code not between", value1, value2, "consCode");
            return (Criteria) this;
        }

        public Criteria andConsNameIsNull() {
            addCriterion("cons_name is null");
            return (Criteria) this;
        }

        public Criteria andConsNameIsNotNull() {
            addCriterion("cons_name is not null");
            return (Criteria) this;
        }

        public Criteria andConsNameEqualTo(String value) {
            addCriterion("cons_name =", value, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameNotEqualTo(String value) {
            addCriterion("cons_name <>", value, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameGreaterThan(String value) {
            addCriterion("cons_name >", value, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameGreaterThanOrEqualTo(String value) {
            addCriterion("cons_name >=", value, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameLessThan(String value) {
            addCriterion("cons_name <", value, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameLessThanOrEqualTo(String value) {
            addCriterion("cons_name <=", value, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameLike(String value) {
            addCriterion("cons_name like", value, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameNotLike(String value) {
            addCriterion("cons_name not like", value, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameIn(List<String> values) {
            addCriterion("cons_name in", values, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameNotIn(List<String> values) {
            addCriterion("cons_name not in", values, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameBetween(String value1, String value2) {
            addCriterion("cons_name between", value1, value2, "consName");
            return (Criteria) this;
        }

        public Criteria andConsNameNotBetween(String value1, String value2) {
            addCriterion("cons_name not between", value1, value2, "consName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_constants
     *
     * @mbg.generated do_not_delete_during_merge Tue Apr 21 09:05:41 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_constants
     *
     * @mbg.generated Tue Apr 21 09:05:41 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}